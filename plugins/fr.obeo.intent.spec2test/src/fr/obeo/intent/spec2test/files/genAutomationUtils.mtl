[comment encoding = UTF-8 /]
[module genAutomationUtils('http://www.eclipse.org/intent/specification/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]

[template public getBasePackage (specification : Specification) ]
[specification.automationLayer.basePackage/]
[/template]
[template public getAutomationPackage (specification : Specification) ]
[getBasePackage()/].automation
[/template]
[template public getAutomationPath(specification : Specification)post (trim())]
	[getBasePath()/][getAutomationPackage(specification).substituteAll('.', '/')/]
[/template]

[template public getPackage (specification : Specification, type:TestType) ]
[getBasePackage()/].[type/]
[/template]

[template public getContextsPackage(specification : Specification)post (trim())]
	[getBasePackage()/].contexts
[/template]

[template public getContextsPath(specification : Specification)post (trim())]
	[getBasePath()/][getContextsPackage(specification).substituteAll('.', '/')/]
[/template]

[template public getFeaturePath(object : EObject, type:TestType)post (trim())]
[getBasePath()/][getFeaturePackage(object, type).substituteAll('.', '/')/]
[/template]

[template public getFeaturePackage(object : EObject, type: TestType)post (trim())]
[if (object.oclIsTypeOf(Specification))]
	[getPackage(object.oclAsType(Specification), type)/]
[elseif (object.oclIsTypeOf(Story) or object.oclIsTypeOf(Feature))]
	[getFeaturePackage(object.eContainer(), type).toLowerFirst()/].[object.oclAsType(NamedElement).name.toLowerFirst()/]
[elseif (object.oclIsTypeOf(Scenario))]
	[getFeaturePackage(object.eContainer(), type).toLowerFirst()/]
[/if]
[/template]

[query public getTestClasses (namedElement : NamedElement, type : TestType) : Set(NamedElement) = if namedElement.oclIsTypeOf(Feature) then getTestTypeFeatures(namedElement.oclAsType(Feature).features, type)->union(namedElement.oclAsType(Feature).stories) else namedElement.oclAsType(Story).scenarios endif/]

[template public getBasePath()post (trim())]
src/
[/template]


[query public getTestTypeFeatures (elements : Set(NamedElement), type : TestType) : Set(NamedElement) = elements->select(element|element.eAllContents(TestGenerationNote)->select(note|note.type=type)->size()>0)/]

[template public getTestClassName (testClass : NamedElement, type: TestType)post (trim()) ]
[if (testClass.oclIsTypeOf(Scenario))]
	[testClass.name/]
[else]
	[testClass.name+type.toString().toUpperFirst()/]Tests
[/if]
[/template]

[template public genLicence () ]
/*******************************************************************************
 * Copyright (c) 2013 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/

[/template]